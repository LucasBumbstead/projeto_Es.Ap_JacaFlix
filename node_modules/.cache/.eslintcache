[{"C:\\Users\\Administrator\\Videos\\projeto_Es.Ap_JacaFlix\\src\\index.js":"1","C:\\Users\\Administrator\\Videos\\projeto_Es.Ap_JacaFlix\\src\\App.js":"2","C:\\Users\\Administrator\\Videos\\projeto_Es.Ap_JacaFlix\\src\\Routes.js":"3","C:\\Users\\Administrator\\Videos\\projeto_Es.Ap_JacaFlix\\src\\components\\Movie.js":"4"},{"size":264,"mtime":1699394802316,"results":"5","hashOfConfig":"6"},{"size":9140,"mtime":1699394802313,"results":"7","hashOfConfig":"6"},{"size":0,"mtime":1699394802313,"results":"8","hashOfConfig":"6"},{"size":738,"mtime":1692876150240,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},"12wzhfk",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Administrator\\Videos\\projeto_Es.Ap_JacaFlix\\src\\index.js",["24"],[],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport Routes from \"./Routes\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","C:\\Users\\Administrator\\Videos\\projeto_Es.Ap_JacaFlix\\src\\App.js",["25"],[],"import React, { useEffect, useState, useRef } from 'react';\r\nimport './App.css';\r\nimport axios from 'axios';\r\nimport Movie from './components/Movie';\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport logo from './assets/logo.png';\r\nimport jaca from './assets/icons8-jackfruit-48.png';\r\nimport ReactPlayer from 'react-player'; // Importe o componente ReactPlayer\r\nimport YouTube from 'react-youtube';\r\nimport { animateScroll as scroll } from 'react-scroll';\r\n\r\n\r\n\r\n// Importe o Vimeo do react-player\r\nimport Vimeo from 'react-player/vimeo';\r\n\r\nfunction App() {\r\n  const MOVIE_API = \"https://api.themoviedb.org/3/\";\r\n  const SEARCH_API = MOVIE_API + \"search/movie\";\r\n  const DISCOVER_API = MOVIE_API + \"discover/movie/?language=pt-BR\";\r\n  const API_KEY = \"fca20a8a62aeb9dec3aca16c54e9a58f\";\r\n  const BACKDROP_PATH = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\n  const [playing, setPlaying] = useState(false);\r\n  const [trailer, setTrailer] = useState(null);\r\n  const [movies, setMovies] = useState([]);\r\n  const [searchKey, setSearchKey] = useState(\"\");\r\n  const [movie, setMovie] = useState({ title: \"Loading Movies\" });\r\n  const [playingTrailer, setPlayingTrailer] = useState(false);\r\n\r\n  const [videoUrl, setVideoUrl] = useState(null); // Adicione um estado para a URL do vídeo\r\n  const [showVideoPlayer, setShowVideoPlayer] = useState(false); // Estado para controlar a exibição do reprodutor de vídeo\r\n  const videoPlayerRef = useRef(null);\r\n\r\n\r\n  useEffect(() => {\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  const fetchMovies = async (event) => {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    const { data } = await axios.get(`${searchKey ? SEARCH_API : DISCOVER_API}`, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        query: searchKey\r\n      }\r\n    });\r\n\r\n    console.log(data.results[0]);\r\n    setMovies(data.results);\r\n    setMovie(data.results[0]);\r\n\r\n    if (data.results.length) {\r\n      await fetchMovie(data.results[0].id);\r\n    }\r\n  };\r\n\r\n  const fetchMovie = async (id) => {\r\n    const { data } = await axios.get(`${MOVIE_API}movie/${id}?language=pt-BR`, {\r\n      params: {\r\n        api_key: API_KEY,\r\n        append_to_response: \"videos\"\r\n      }\r\n    });\r\n\r\n    if (data.videos && data.videos.results) {\r\n      const trailer = data.videos.results.find((vid) => vid.type === \"Trailer\");\r\n      setTrailer(trailer ? trailer : data.videos.results[0]);\r\n    }\r\n\r\n    setMovie(data);\r\n  };\r\n\r\n  const handleLogoClick = () => {\r\n    window.location.reload();\r\n  };\r\n\r\n  const selectMovie = (movie) => {\r\n    fetchMovie(movie.id);\r\n    setPlaying(false);\r\n    setMovie(movie);\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  const renderMovies = () =>\r\n    movies.map((movie) => (\r\n      <Movie selectMovie={selectMovie} key={movie.id} movie={movie} />\r\n    ));\r\n\r\n  const Filmes = {\r\n    \"Besouro Azul\": \"exEiPYX2CY8\",\r\n    \"Homem-Aranha: Através do Aranhaverso\": \"https://vimeo.com/871587694?share=copy\",\r\n    \"A Chamada\": \"https://vimeo.com/871587694?share=copy\",\r\n    \"Your Name\": \"https://vimeo.com/620868134\",\r\n    \"Velozes & Furiosos 10\": \"https://vimeo.com/856018034\",\r\n  };\r\n\r\n  const handleAssistirFilmeClick = () => {\r\n    const filmeKey = Filmes[movie.title];\r\n  \r\n    if (filmeKey) {\r\n      // Defina a URL do vídeo para reprodução\r\n      setVideoUrl(filmeKey);\r\n      setShowVideoPlayer(true); // Exiba o reprodutor de vídeo\r\n      setPlaying(false); // Pausar o vídeo de fundo (se estiver tocando)\r\n      setPlayingTrailer(false); // Certifique-se de que o trailer não esteja sendo reproduzido\r\n  \r\n      // Role a página para o local onde o vídeo está sendo exibido usando react-scroll\r\n      scroll.scrollTo('video-player', {\r\n        duration: 800,\r\n        smooth: 'easeInOutQuart',\r\n      });\r\n\r\n      \r\n    } else {\r\n      // TODO:\r\n      alert('Desculpe, o filme selecionado não está disponível no momento.');\r\n    }\r\n  };\r\n\r\n  const handleCloseVideoPlayer = () => {\r\n    // Feche o reprodutor de vídeo\r\n    setShowVideoPlayer(false);\r\n    setVideoUrl(null); // Limpe a URL do vídeo\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"center-max-size header\">\r\n        <img className=\"logo\" src={logo} alt=\"Logo Jaca Flix!\" onClick={handleLogoClick} />\r\n        <form className=\"form\" onSubmit={fetchMovies}>\r\n          <input\r\n            className=\"search\"\r\n            type=\"text\"\r\n            id=\"search\"\r\n            onInput={(event) => setSearchKey(event.target.value)}\r\n          />\r\n          <button className=\"submit-search\" type=\"submit\">\r\n            <FaSearch />\r\n          </button>\r\n        </form>\r\n      </header>\r\n      {movies.length ? (\r\n        <main>\r\n          {movie ? (\r\n            <div\r\n              className=\"poster\"\r\n              style={{\r\n                backgroundImage: `linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)), url(${BACKDROP_PATH}${movie.backdrop_path})`,\r\n              }}\r\n            >\r\n              {playing ? (\r\n                <>\r\n                <div className=\"center-video\">\r\n                  <ReactPlayer\r\n                    ref={videoPlayerRef}\r\n                    url={videoUrl}\r\n                    controls={true}\r\n                    width=\"1000px\"\r\n                    height=\"500px\"\r\n                    playing={true}\r\n                    onEnded={handleCloseVideoPlayer}\r\n                  />\r\n                </div>\r\n                  <button onClick={handleCloseVideoPlayer} className=\"button close-video\">\r\n                    Fechar\r\n                  </button>\r\n                </>\r\n              ) : playingTrailer ? (\r\n                <>\r\n                  <YouTube\r\n                    videoId={trailer.key}\r\n                    className={\"youtube amru\"}\r\n                    ontainerClassName={\"youtube-container amru\"}\r\n                    opts={{\r\n                      width: \"1000px\",\r\n                      height: \"500px\",\r\n                      playerVars: {\r\n                        autoplay: 1,\r\n                        controls: 1,\r\n                        cc_load_policy: 0,\r\n                        fs: 1,\r\n                        iv_load_policy: 0,\r\n                        modestbranding: 0,\r\n                        rel: 0,\r\n                        showinfo: 0,\r\n                      },\r\n                    }}\r\n                  />\r\n                  <button onClick={() => setPlayingTrailer(false)} className=\"button close-video\">\r\n                    Fechar Trailer\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <div className=\"center-max-size\">\r\n                  <div className=\"poster-content\">\r\n                    {trailer ? (\r\n                      <div>\r\n                        <button\r\n                          className=\"button play-video\"\r\n                          onClick={handleAssistirFilmeClick}\r\n                          type=\"button\"\r\n                        >\r\n                          Assistir Filme\r\n                        </button>\r\n                        <button\r\n                          className=\"button play-video\"\r\n                          onClick={() => setPlayingTrailer(true)}\r\n                          type=\"button\"\r\n                        >\r\n                          Assistir Trailer\r\n                        </button>\r\n                      </div>\r\n                    ) : (\r\n                      <div>\r\n                        <button\r\n                          className=\"button play-video\"\r\n                          onClick={handleAssistirFilmeClick}\r\n                          type=\"button\"\r\n                        >\r\n                          Assistir Filme\r\n                        </button>\r\n                        <button\r\n                          className=\"button play-video\"\r\n                          onClick={() => setPlayingTrailer(true)}\r\n                          type=\"button\"\r\n                        >\r\n                          Assistir Trailer\r\n                        </button>\r\n                      </div>\r\n                    )}\r\n                    <h1>{movie.title}</h1>\r\n                    <p>{movie.overview}</p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ) : null}\r\n\r\n          {/* Título \"Filmes Recomendados\" adicionado aqui */}\r\n          <h2 className=\"title\">\r\n            <img src={jaca} alt=\"Jaca\" className=\"jaca-icon-left\" />\r\n            Recomendações de Filmes do Dia\r\n            <img src={jaca} alt=\"Jaca\" className=\"jaca-icon-right\" />\r\n          </h2>\r\n\r\n          <div className=\"center-max-size container\">{renderMovies()}</div>\r\n        </main>\r\n      ) : (\r\n        'Nenhum filme encontrado'\r\n      )}\r\n      {showVideoPlayer && videoUrl && (\r\n        <div className=\"fullscreen-video\">\r\n          <div className=\"center-video\">\r\n            <Vimeo url={videoUrl} controls={true} playing={true} onEnded={handleCloseVideoPlayer} />\r\n            <button onClick={handleCloseVideoPlayer} className=\"button close-video\">\r\n              Fechar Filme\r\n            </button>\r\n        </div>\r\n      </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Administrator\\Videos\\projeto_Es.Ap_JacaFlix\\src\\Routes.js",[],[],"C:\\Users\\Administrator\\Videos\\projeto_Es.Ap_JacaFlix\\src\\components\\Movie.js",[],[],{"ruleId":"26","severity":1,"message":"27","line":5,"column":8,"nodeType":"28","messageId":"29","endLine":5,"endColumn":14},{"ruleId":"30","severity":1,"message":"31","line":38,"column":6,"nodeType":"32","endLine":38,"endColumn":8,"suggestions":"33"},"no-unused-vars","'Routes' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMovies'. Either include it or remove the dependency array.","ArrayExpression",["34"],{"desc":"35","fix":"36"},"Update the dependencies array to be: [fetchMovies]",{"range":"37","text":"38"},[1492,1494],"[fetchMovies]"]