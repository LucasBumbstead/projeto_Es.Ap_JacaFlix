[{"C:\\Projetos\\jacaflix\\src\\index.js":"1","C:\\Projetos\\jacaflix\\src\\App.js":"2","C:\\Projetos\\jacaflix\\src\\reportWebVitals.js":"3","C:\\Projetos\\jacaflix\\src\\Tmdb.js":"4","C:\\Projetos\\jacaflix\\src\\tmdb.js":"5","C:\\Projetos\\jacaflix\\src\\components\\movieRow.js":"6","C:\\Projetos\\jacaflix\\src\\components\\MovieRow.js":"7","C:\\Projetos\\jacaflix\\src\\components\\featuredmovie.js":"8","C:\\Projetos\\jacaflix\\src\\components\\header.js":"9"},{"size":281,"mtime":1691007663056,"results":"10","hashOfConfig":"11"},{"size":2128,"mtime":1691277153152,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1691007670436,"results":"13","hashOfConfig":"11"},{"size":2195,"mtime":1691026529194,"results":"14","hashOfConfig":"11"},{"size":2794,"mtime":1691275728999,"results":"15","hashOfConfig":"11"},{"size":1757,"mtime":1691300863551,"results":"16","hashOfConfig":"11"},{"size":640,"mtime":1691042914684,"results":"17","hashOfConfig":"11"},{"size":1808,"mtime":1691278998867,"results":"18","hashOfConfig":"11"},{"size":1100,"mtime":1691298301153,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"24"},"zzp2p",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"24"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"24"},"C:\\Projetos\\jacaflix\\src\\index.js",["53"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n",[],"C:\\Projetos\\jacaflix\\src\\App.js",["54","55","56"],[],"import React, { useEffect, useState } from 'react';\nimport './App.css' \nimport tmdb from './tmdb';\nimport MovieRow from './components/movieRow';\nimport FeaturedMovie from './components/featuredmovie';\nimport Header from './components/header';\n\nexport default () => {\n\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [blackHeader, setBlackHeader] = useState(false);\n\n\n  useEffect(()=>{\n    const loadAll = async () => {\n      //Pegando lista TOTAL\n      let list = await tmdb.getHomeList();\n      setMovieList(list);\n\n      // pegando o featured\n      let originals = list.filter(i=>i.slug == 'originals');\n      let ramdomChosen = Math.floor(Math.random() * (originals[0].items.results.length -1));\n      let chosen = originals[0].items.results[ramdomChosen];\n      let chosenInfo = await tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n\n    }\n\n\n    loadAll();\n\n  }, []);\n\n  useEffect(()=>{\n    const scrollListener = () => {\n      if(window.scrollY > 10){\n        setBlackHeader(true);\n      } else{\n        setBlackHeader(false);\n      }\n    }\n\n    window.addEventListener('scroll', scrollListener);\n    return() =>{\n      window.removeEventListener('scroll', scrollListener);\n    }\n\n  }, []);\n\n  return (\n    <div className=\"page\">\n\n      <Header black={blackHeader} />\n\n      {featuredData && \n        <FeaturedMovie item={featuredData} />\n      }\n\n      \n\n      <section className=\"lists\">\n        {movieList.map((item,key)=>(\n          <MovieRow key={key} title= {item.title} items={item.items} />\n\n        ))}\n      </section> \n\n      <footer>\n        Feito com <span role =\"img\" aria-label=\"coração\">❤️</span> pelo Grupo4 de ES aplicada<br/>\n        Direitos de imagem para Netflix<br/>\n        Dados pegos do site Themoviedb.org\n\n      </footer>\n      {movieList.length <= 0 &&\n      <div className=\"loading\">\n        <img src = \"https://media0.giphy.com/media/3y0oCOkdKKRi0/giphy.gif?cid=ecf05e473dd2rxbip6djqlmk38lgzcn4puttok8qpnl3hd0u&ep=v1_gifs_search&rid=giphy.gif&ct=g\"></img>\n      </div>\n      }\n    </div>\n  );\n}","C:\\Projetos\\jacaflix\\src\\reportWebVitals.js",[],[],"C:\\Projetos\\jacaflix\\src\\Tmdb.js",["57","58","59"],[],"C:\\Projetos\\jacaflix\\src\\tmdb.js",["60"],[],"const API_KEY = 'fca20a8a62aeb9dec3aca16c54e9a58f';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\n/*\r\n-originais da jacaFLIX\r\n-recomendados (trending)\r\n- filmes em alta(top rated)\r\n- acao\r\n- comedia\r\n- romance\r\n- documentarios\r\n*/\r\n\r\nconst basicFetch = async (endpoint) => {\r\n    const req = await fetch (`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json;\r\n}\r\n\r\nexport default {\r\n    getHomeList: async () => {\r\n        return [\r\n            {\r\n                slug: 'originals',\r\n                title: 'Recomendados jacaFLIX',\r\n                items: await basicFetch(`/discover/tv?with_network=213&langugage=pt-BR&with_origin_country=US&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Baseado em suas pesquisas',\r\n                items: await basicFetch(`/trending/all/week?langugage=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title: 'Em alta',\r\n                items: await basicFetch(`/movie/top_rated?langugage=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'Ação',\r\n                items: await basicFetch(`/discover/movie?with_genres=28&langugage=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comédia',\r\n                items: await basicFetch(`/discover/movie?with_genres=35&langugage=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch(`/discover/movie?with_genres=27&langugage=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch(`/discover/movie?with_genres=10749&langugage=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentários',\r\n                items: await basicFetch(`/discover/movie?with_genres=99&langugage=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            \r\n        ];\r\n    },\r\n    getMovieInfo: async (movieId, type) => {\r\n        let info = {};\r\n\r\n        if(movieId){\r\n            switch(type){\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n\r\n                break;\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n\r\n                break;\r\n                default:\r\n                    info = null;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return info;\r\n    }\r\n}","C:\\Projetos\\jacaflix\\src\\components\\movieRow.js",["61"],[],"C:\\Projetos\\jacaflix\\src\\components\\MovieRow.js",["62"],[],"C:\\Projetos\\jacaflix\\src\\components\\featuredmovie.js",["63"],[],"import React from 'react';\r\nimport './featuredmovie.css';\r\n\r\nexport default ({item}) => {\r\n\r\n    let firstDate = new Date(item.first_air_date);\r\n    let genres = [];\r\n    for(let i in item.genres){\r\n        genres.push(item.genres[i].name);\r\n    }\r\n\r\n    let description = item.overview;\r\n    if(description.length > 200){\r\n        description = description.substring(0,200) + '...';\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <section className=\"featured\" style={{\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            backgroundImage:  `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n        }}>\r\n            <div className=\"featured--vertical\">\r\n                <div className=\"featured--horizontal\">\r\n                    <div className=\"featured--name\">{item.original_name}</div>\r\n                    <div className=\"featured--info\">\r\n                        <div className=\"featured--points\">{item.vote_average} pontos</div>\r\n                        <div className=\"featured--year\">{firstDate.getFullYear()}</div>\r\n                        <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\r\n                    </div>\r\n                    <div className=\"featured--description\">{description} </div>\r\n                    <div className=\"featured--buttons\">\r\n                        <a href={`/watch/${item.id}`}className=\"featured--watchbutton\">► Assistir</a>\r\n                        <a href={`/watch/trailer/${item.id}`}className=\"featured--mylistbutton\">Trailer</a>\r\n\r\n\r\n\r\n                    </div>\r\n                    <div className=\"featured--genres\"><strong>Gêneros: </strong>{genres.join(' , ')}</div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}","C:\\Projetos\\jacaflix\\src\\components\\header.js",["64","65"],[],"import React, { useState } from 'react';\r\nimport'./header.css';\r\n\r\nimport Logo from \"./img/logo.png\"\r\nimport User from \"./img/user.png\"\r\n\r\nexport default({black}) => {\r\n    const [searchKey, setSearchKey] = useState(\"\")\r\n\r\n    const searchMovies = (e) =>{\r\n        e.preventDefault()\r\n        \r\n\r\n    }\r\n    return(\r\n        <header className={black ? 'black' : '' }>\r\n            <div className=\"header--logo\">\r\n                <a href=\"/\">\r\n                    <img src={Logo} alt=\"Logo jacaFlix\" title=\"Logo jacaFlix\"/>\r\n                </a>\r\n            </div>\r\n            <div className=\"header--user\">\r\n                <a href=\"/\">\r\n                    <img src={User} alt=\"Usuario jacaFlix\" title=\"User\"/>\r\n\r\n                </a>\r\n            </div>\r\n            <form className=\"Search--button\" onSubmit={searchMovies}>\r\n                <input type=\"text\" onChange={(e) => setSearchKey(e.target.value)}/>\r\n                <button type={\"submit\"}>Search!</button>            \r\n                </form>\r\n                \r\n            \r\n                \r\n        </header>\r\n        \r\n\r\n    );\r\n}",{"ruleId":"66","severity":1,"message":"67","line":4,"column":8,"nodeType":"68","messageId":"69","endLine":4,"endColumn":23},{"ruleId":"70","severity":1,"message":"71","line":8,"column":1,"nodeType":"72","endLine":83,"endColumn":2},{"ruleId":"73","severity":1,"message":"74","line":23,"column":45,"nodeType":"75","messageId":"76","endLine":23,"endColumn":47},{"ruleId":"77","severity":1,"message":"78","line":78,"column":9,"nodeType":"79","endLine":78,"endColumn":167},{"ruleId":"66","severity":1,"message":"80","line":2,"column":7,"nodeType":"68","messageId":"69","endLine":2,"endColumn":15},{"ruleId":"81","severity":1,"message":"82","line":14,"column":30,"nodeType":"83","messageId":"84","endLine":14,"endColumn":55},{"ruleId":"70","severity":1,"message":"85","line":19,"column":1,"nodeType":"72","endLine":65,"endColumn":2},{"ruleId":"70","severity":1,"message":"85","line":20,"column":1,"nodeType":"72","endLine":87,"endColumn":2},{"ruleId":"70","severity":1,"message":"71","line":7,"column":1,"nodeType":"72","endLine":54,"endColumn":2},{"ruleId":"70","severity":1,"message":"71","line":5,"column":1,"nodeType":"72","endLine":20,"endColumn":2},{"ruleId":"70","severity":1,"message":"71","line":4,"column":1,"nodeType":"72","endLine":46,"endColumn":2},{"ruleId":"70","severity":1,"message":"71","line":7,"column":1,"nodeType":"72","endLine":39,"endColumn":2},{"ruleId":"66","severity":1,"message":"86","line":8,"column":12,"nodeType":"68","messageId":"69","endLine":8,"endColumn":21},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'API_BASE' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","Assign object to a variable before exporting as module default","'searchKey' is assigned a value but never used."]