[{"C:\\Users\\Administrator\\Desktop\\projeto_Es.Ap_JacaFlix\\src\\index.js":"1","C:\\Users\\Administrator\\Desktop\\projeto_Es.Ap_JacaFlix\\src\\App.js":"2","C:\\Users\\Administrator\\Desktop\\projeto_Es.Ap_JacaFlix\\src\\components\\Movie.js":"3","C:\\Users\\Administrator\\Videos\\projeto_Es.Ap_JacaFlix\\src\\index.js":"4","C:\\Users\\Administrator\\Videos\\projeto_Es.Ap_JacaFlix\\src\\App.js":"5","C:\\Users\\Administrator\\Videos\\projeto_Es.Ap_JacaFlix\\src\\components\\Movie.js":"6"},{"size":228,"mtime":1692876150240,"results":"7","hashOfConfig":"8"},{"size":6275,"mtime":1692876150240,"results":"9","hashOfConfig":"8"},{"size":738,"mtime":1692876150240,"results":"10","hashOfConfig":"8"},{"size":228,"mtime":1692876150240,"results":"11","hashOfConfig":"12"},{"size":6275,"mtime":1692876150240,"results":"13","hashOfConfig":"12"},{"size":738,"mtime":1692876150240,"results":"14","hashOfConfig":"12"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9atuik",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12wzhfk",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Administrator\\Desktop\\projeto_Es.Ap_JacaFlix\\src\\index.js",[],[],"C:\\Users\\Administrator\\Desktop\\projeto_Es.Ap_JacaFlix\\src\\App.js",["34"],[],"C:\\Users\\Administrator\\Desktop\\projeto_Es.Ap_JacaFlix\\src\\components\\Movie.js",[],[],"C:\\Users\\Administrator\\Videos\\projeto_Es.Ap_JacaFlix\\src\\index.js",[],[],"C:\\Users\\Administrator\\Videos\\projeto_Es.Ap_JacaFlix\\src\\App.js",["35"],[],"\r\nimport { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport axios from \"axios\";\r\nimport Movie from \"./components/Movie\";\r\nimport Youtube from \"react-youtube\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\n\r\nfunction App() {\r\n    const MOVIE_API = \"https://api.themoviedb.org/3/\";\r\n    const SEARCH_API = MOVIE_API + \"search/movie\";\r\n    const DISCOVER_API = MOVIE_API + \"discover/movie/?language=pt-BR\";\r\n    const API_KEY = \"fca20a8a62aeb9dec3aca16c54e9a58f\";\r\n    const BACKDROP_PATH = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\n    const [playing, setPlaying] = useState(false); \r\n    const [trailer, setTrailer] = useState(null);\r\n    const [movies, setMovies] = useState([]);\r\n    const [searchKey, setSearchKey] = useState(\"\");\r\n    const [movie, setMovie] = useState({ title: \"Loading Movies\" });\r\n\r\n    useEffect(() => {\r\n        fetchMovies();\r\n    }, []);\r\n\r\n    const fetchMovies = async (event) => {\r\n        if (event) {\r\n            event.preventDefault()\r\n        }\r\n\r\n        const { data } = await axios.get(`${searchKey ? SEARCH_API : DISCOVER_API}`, {\r\n            params: {\r\n                api_key: API_KEY,\r\n                query: searchKey\r\n            }\r\n        })\r\n\r\n        console.log(data.results[0])\r\n        setMovies(data.results)\r\n        setMovie(data.results[0])\r\n\r\n        if (data.results.length) {\r\n            await fetchMovie(data.results[0].id)\r\n        }\r\n    }\r\n\r\n    const fetchMovie = async (id) => {\r\n        const { data } = await axios.get(`${MOVIE_API}movie/${id}?language=pt-BR`, {\r\n            params: {\r\n                api_key: API_KEY,\r\n                append_to_response: \"videos\"\r\n            }\r\n        })\r\n\r\n        if (data.videos && data.videos.results) {\r\n            const trailer = data.videos.results.find(vid => vid.name === \"Official Trailer\")\r\n            setTrailer(trailer ? trailer : data.videos.results[0])\r\n        }\r\n\r\n        setMovie(data)\r\n    }\r\n    const handleLogoClick = () => {\r\n        window.location.reload();\r\n    };\r\n\r\n\r\n    const selectMovie = (movie) => {\r\n        fetchMovie(movie.id)\r\n        setPlaying(false)\r\n        setMovie(movie)\r\n        window.scrollTo(0, 0)\r\n    }\r\n\r\n    const renderMovies = () => (\r\n        movies.map(movie => (\r\n            <Movie\r\n                selectMovie={selectMovie}\r\n                key={movie.id}\r\n                movie={movie}\r\n            />\r\n        ))\r\n    )\r\n\r\n    return (\r\n        <div className=\"App\">\r\n        <header className=\"center-max-size header\">\r\n            <img className=\"logo\" src=\"./assets/logo.png\" alt=\"Logo Jaca Flix!\" onClick={handleLogoClick}/>\r\n            <form className=\"form\" onSubmit={fetchMovies}>\r\n                <input className=\"search\" type=\"text\" id=\"search\" onInput={(event) => setSearchKey(event.target.value)} />\r\n                <button className=\"submit-search\" type=\"submit\"><FaSearch /></button>\r\n            </form>\r\n        </header>\r\n            {movies.length ?\r\n                <main>\r\n                    {movie ?\r\n                        <div className=\"poster\"\r\n                            style={{ backgroundImage: `linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)), url(${BACKDROP_PATH}${movie.backdrop_path})` }}>\r\n                            {playing ?\r\n                                <>\r\n                                    <Youtube\r\n                                        videoId={trailer.key}\r\n                                        className={\"youtube amru\"}\r\n                                        containerClassName={\"youtube-container amru\"}\r\n                                        opts={\r\n                                            {\r\n                                                width: '1000px',\r\n                                                height: '500px',\r\n                                                playerVars: {\r\n                                                    autoplay: 1,\r\n                                                    controls: 1,\r\n                                                    cc_load_policy: 0,\r\n                                                    fs: 1,\r\n                                                    iv_load_policy: 0,\r\n                                                    modestbranding: 0,\r\n                                                    rel: 0,\r\n                                                    showinfo: 0,\r\n                                                },\r\n                                            }\r\n                                        }\r\n                                    />\r\n                                    <button onClick={() => setPlaying(false)} className={\"button close-video\"}>Fechar\r\n                                    </button>\r\n                                </> :\r\n                                <div className=\"center-max-size\">\r\n                                    <div className=\"poster-content\">\r\n                                        {trailer ?\r\n                                            <div>\r\n                                            <button className={\"button play-video\"} onClick={() => alert(\"Play Filme\")} type=\"button\">Assisitr Filme</button>\r\n                                            <button className={\"button play-video\"} onClick={() => setPlaying(true)} type=\"button\">Trailer</button>\r\n                                          </div>\r\n                                          :\r\n                                          <div>\r\n                                          <button className=\"button play-video\" onClick={() => alert(\"Play Filme\")} type=\"button\">Assistir Filme</button>\r\n                                      </div>\r\n                                  }\r\n                                        <h1>{movie.title}</h1>\r\n                                        <p>{movie.overview}</p>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        : null}\r\n\r\n                    <div className={\"center-max-size container\"}>\r\n                        {renderMovies()}\r\n                    </div>\r\n                </main>\r\n                : 'Nenhum filme encontrado'}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","C:\\Users\\Administrator\\Videos\\projeto_Es.Ap_JacaFlix\\src\\components\\Movie.js",[],[],{"ruleId":"36","severity":1,"message":"37","line":24,"column":8,"nodeType":"38","endLine":24,"endColumn":10,"suggestions":"39"},{"ruleId":"36","severity":1,"message":"37","line":24,"column":8,"nodeType":"38","endLine":24,"endColumn":10,"suggestions":"40"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchMovies'. Either include it or remove the dependency array.","ArrayExpression",["41"],["42"],{"desc":"43","fix":"44"},{"desc":"43","fix":"45"},"Update the dependencies array to be: [fetchMovies]",{"range":"46","text":"47"},{"range":"48","text":"47"},[872,874],"[fetchMovies]",[872,874]]