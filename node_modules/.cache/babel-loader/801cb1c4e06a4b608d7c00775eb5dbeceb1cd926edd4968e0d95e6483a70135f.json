{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projetos\\\\jacaflix\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport tmdb from './tmdb';\nimport MovieRow from './components/movieRow';\nimport FeaturedMovie from './components/featuredmovie';\nimport header from './components/header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  useEffect(() => {\n    const loadAll = async () => {\n      //Pegando lista TOTAL\n      let list = await tmdb.getHomeList();\n      setMovieList(list);\n\n      // pegando o featured\n      let originals = list.filter(i => i.slug == 'originals');\n      let ramdomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[ramdomChosen];\n      let chosenInfo = await tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n    };\n    loadAll();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [featuredData && /*#__PURE__*/_jsxDEV(FeaturedMovie, {\n      item: featuredData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"lists\",\n      children: movieList.map((item, key) => /*#__PURE__*/_jsxDEV(MovieRow, {\n        title: item.title,\n        items: item.items\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}, \"/mp4Zi9ytVHS+i5YC/5I14s5PB0=\");","map":{"version":3,"names":["React","useEffect","useState","tmdb","MovieRow","FeaturedMovie","header","jsxDEV","_jsxDEV","_s","movieList","setMovieList","featuredData","setFeaturedData","loadAll","list","getHomeList","originals","filter","i","slug","ramdomChosen","Math","floor","random","items","results","length","chosen","chosenInfo","getMovieInfo","id","className","children","item","fileName","_jsxFileName","lineNumber","columnNumber","map","key","title"],"sources":["C:/Projetos/jacaflix/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css' \nimport tmdb from './tmdb';\nimport MovieRow from './components/movieRow';\nimport FeaturedMovie from './components/featuredmovie';\nimport header from './components/header';\n\nexport default () => {\n\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n\n\n  useEffect(()=>{\n    const loadAll = async () => {\n      //Pegando lista TOTAL\n      let list = await tmdb.getHomeList();\n      setMovieList(list);\n\n      // pegando o featured\n      let originals = list.filter(i=>i.slug == 'originals');\n      let ramdomChosen = Math.floor(Math.random() * (originals[0].items.results.length -1));\n      let chosen = originals[0].items.results[ramdomChosen];\n      let chosenInfo = await tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n\n    }\n\n\n    loadAll();\n\n  }, []);\n\n  return (\n    <div className=\"page\">\n\n      \n\n      {featuredData && \n        <FeaturedMovie item={featuredData} />\n      }\n\n      \n\n      <section className=\"lists\">\n        {movieList.map((item,key)=>(\n          <MovieRow key={key} title= {item.title} items={item.items} />\n\n        ))}\n      </section>\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,eAAAC,EAAA,CAAe,MAAM;EAAAA,EAAA;EAGnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAGtDD,SAAS,CAAC,MAAI;IACZ,MAAMa,OAAO,GAAG,MAAAA,CAAA,KAAY;MAC1B;MACA,IAAIC,IAAI,GAAG,MAAMZ,IAAI,CAACa,WAAW,CAAC,CAAC;MACnCL,YAAY,CAACI,IAAI,CAAC;;MAElB;MACA,IAAIE,SAAS,GAAGF,IAAI,CAACG,MAAM,CAACC,CAAC,IAAEA,CAAC,CAACC,IAAI,IAAI,WAAW,CAAC;MACrD,IAAIC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIP,SAAS,CAAC,CAAC,CAAC,CAACQ,KAAK,CAACC,OAAO,CAACC,MAAM,GAAE,CAAC,CAAC,CAAC;MACrF,IAAIC,MAAM,GAAGX,SAAS,CAAC,CAAC,CAAC,CAACQ,KAAK,CAACC,OAAO,CAACL,YAAY,CAAC;MACrD,IAAIQ,UAAU,GAAG,MAAM1B,IAAI,CAAC2B,YAAY,CAACF,MAAM,CAACG,EAAE,EAAE,IAAI,CAAC;MACzDlB,eAAe,CAACgB,UAAU,CAAC;IAE7B,CAAC;IAGDf,OAAO,CAAC,CAAC;EAEX,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAKwB,SAAS,EAAC,MAAM;IAAAC,QAAA,GAIlBrB,YAAY,iBACXJ,OAAA,CAACH,aAAa;MAAC6B,IAAI,EAAEtB;IAAa;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAKvC9B,OAAA;MAASwB,SAAS,EAAC,OAAO;MAAAC,QAAA,EACvBvB,SAAS,CAAC6B,GAAG,CAAC,CAACL,IAAI,EAACM,GAAG,kBACtBhC,OAAA,CAACJ,QAAQ;QAAWqC,KAAK,EAAGP,IAAI,CAACO,KAAM;QAAChB,KAAK,EAAES,IAAI,CAACT;MAAM,GAA3Ce,GAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA0C,CAE7D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}